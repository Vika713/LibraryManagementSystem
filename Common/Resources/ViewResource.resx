<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountStatusChange" xml:space="preserve">
    <value>Account status change</value>
  </data>
  <data name="AccountStatusChangeMessage" xml:space="preserve">
    <value>Account status change message</value>
  </data>
  <data name="AccountStatusWasChanged" xml:space="preserve">
    <value>Account status was changed</value>
  </data>
  <data name="AddACard" xml:space="preserve">
    <value>Add a card</value>
  </data>
  <data name="AddAuthor" xml:space="preserve">
    <value>Add author</value>
  </data>
  <data name="AddCardForMember" xml:space="preserve">
    <value>Add card for member</value>
  </data>
  <data name="AreYouSureYouWantToDeleteRack" xml:space="preserve">
    <value>Are you sure you want to delete rack</value>
  </data>
  <data name="AreYouSureYouWantToDeleteThis" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="BackToMenu" xml:space="preserve">
    <value>Back to menu</value>
  </data>
  <data name="Block" xml:space="preserve">
    <value>Block</value>
  </data>
  <data name="BlockACard" xml:space="preserve">
    <value>Block a card</value>
  </data>
  <data name="BlockCard" xml:space="preserve">
    <value>Block card</value>
  </data>
  <data name="Book" xml:space="preserve">
    <value>Book</value>
  </data>
  <data name="BookISBN" xml:space="preserve">
    <value>Book ISBN</value>
  </data>
  <data name="BookItem" xml:space="preserve">
    <value>Book item</value>
  </data>
  <data name="BookItemDetails" xml:space="preserve">
    <value>Book item details</value>
  </data>
  <data name="BookItemISBN" xml:space="preserve">
    <value>Book item ISBN</value>
  </data>
  <data name="BookItems" xml:space="preserve">
    <value>Book items</value>
  </data>
  <data name="BookLoanedUntil" xml:space="preserve">
    <value>Book is loaned until</value>
  </data>
  <data name="BookReturned" xml:space="preserve">
    <value>Book was returned successfully</value>
  </data>
  <data name="Books" xml:space="preserve">
    <value>Books</value>
  </data>
  <data name="BorrowedBookItems" xml:space="preserve">
    <value>Borrowed book items</value>
  </data>
  <data name="BorrowedBooks" xml:space="preserve">
    <value>Borrowed books</value>
  </data>
  <data name="BorrowedMember" xml:space="preserve">
    <value>Borrowed member</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelReservation" xml:space="preserve">
    <value>Cancel Reservation</value>
  </data>
  <data name="Card" xml:space="preserve">
    <value>Card</value>
  </data>
  <data name="ChangeAccountStatus" xml:space="preserve">
    <value>Change account status</value>
  </data>
  <data name="ChangeAccountStatusFor" xml:space="preserve">
    <value>Change account status for</value>
  </data>
  <data name="CheckOut" xml:space="preserve">
    <value>Check-out</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateBook" xml:space="preserve">
    <value>Create book</value>
  </data>
  <data name="CreateBookItem" xml:space="preserve">
    <value>Create book item</value>
  </data>
  <data name="CreateCard" xml:space="preserve">
    <value>Create card</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create new</value>
  </data>
  <data name="CreatePerson" xml:space="preserve">
    <value>Create person</value>
  </data>
  <data name="CreateRack" xml:space="preserve">
    <value>Create rack</value>
  </data>
  <data name="CreateRole" xml:space="preserve">
    <value>Create role</value>
  </data>
  <data name="CurrentStatus" xml:space="preserve">
    <value>Current status</value>
  </data>
  <data name="CurrentStatusIs" xml:space="preserve">
    <value>Current status is</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteBook" xml:space="preserve">
    <value>Delete book</value>
  </data>
  <data name="DeleteBookItem" xml:space="preserve">
    <value>Delete book item</value>
  </data>
  <data name="DeleteRack" xml:space="preserve">
    <value>Delete rack</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditBook" xml:space="preserve">
    <value>Edit book</value>
  </data>
  <data name="EditBookItem" xml:space="preserve">
    <value>Edit book item</value>
  </data>
  <data name="EditPerson" xml:space="preserve">
    <value>Edit user</value>
  </data>
  <data name="EditRack" xml:space="preserve">
    <value>Edit rack</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Fine" xml:space="preserve">
    <value>Fine</value>
  </data>
  <data name="Format" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="forMember" xml:space="preserve">
    <value>for member</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="ISBN" xml:space="preserve">
    <value>ISBN</value>
  </data>
  <data name="Lending" xml:space="preserve">
    <value>Lending</value>
  </data>
  <data name="LendingMenu" xml:space="preserve">
    <value>Lending menu</value>
  </data>
  <data name="LendingMessage" xml:space="preserve">
    <value>Lending message</value>
  </data>
  <data name="Librarian" xml:space="preserve">
    <value>Librarian</value>
  </data>
  <data name="LibrarianDetails" xml:space="preserve">
    <value>Librarian details</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Member" xml:space="preserve">
    <value>Member</value>
  </data>
  <data name="MemberDetails" xml:space="preserve">
    <value>Member details</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="OtherBookItems" xml:space="preserve">
    <value>Other book items</value>
  </data>
  <data name="PageSize" xml:space="preserve">
    <value>Page size</value>
  </data>
  <data name="PayFineOf" xml:space="preserve">
    <value>Pay fine of</value>
  </data>
  <data name="People" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Person" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="PersonDetails" xml:space="preserve">
    <value>User details</value>
  </data>
  <data name="PleaseSelect" xml:space="preserve">
    <value>Please select</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Privacy</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Rack" xml:space="preserve">
    <value>Rack</value>
  </data>
  <data name="Racks" xml:space="preserve">
    <value>Racks</value>
  </data>
  <data name="RegisterAsLibrarian" xml:space="preserve">
    <value>Register as librarian</value>
  </data>
  <data name="RegisterAsMember" xml:space="preserve">
    <value>Register as member</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Renew" xml:space="preserve">
    <value>Renew</value>
  </data>
  <data name="Reserve" xml:space="preserve">
    <value>Reserve</value>
  </data>
  <data name="ReserveBookItem" xml:space="preserve">
    <value>Reserve book item</value>
  </data>
  <data name="ReservedBookItems" xml:space="preserve">
    <value>Reserved book items</value>
  </data>
  <data name="ReservedBooks" xml:space="preserve">
    <value>Reserved books</value>
  </data>
  <data name="ReservedMember" xml:space="preserve">
    <value>Reserved member</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ScanBookBarcode" xml:space="preserve">
    <value>Scan book barcode</value>
  </data>
  <data name="ScanLibraryCardBarcode" xml:space="preserve">
    <value>Scan library card barcode</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="ThisProcessIsIreverrsible" xml:space="preserve">
    <value>This process is irreversible</value>
  </data>
  <data name="toContinue" xml:space="preserve">
    <value>to continue</value>
  </data>
</root>