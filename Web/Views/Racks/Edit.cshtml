@model Web.ViewModels.Racks.RackEditViewModel

@{
    ViewData["Title"] = ViewResource.EditRack;
}

<h1>@ViewResource.Edit</h1>
<hr />

<div class="row">
    <div class="col-md-4">
        <dl class="row">
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.RackNumber)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RackNumber)
            </dd>
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.LocationIdentifier)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.LocationIdentifier)
            </dd>
        </dl>
    </div>
</div>

<p>
    @ViewResource.PageSize
    @Html.DropDownList(
        "pageSize", Model.PageSizes as List<SelectListItem>,
        new
        {
            onchange = "SelectionChanged()",
            id = "pageSize"
        })
</p>

<div class="row">
    <div class="col-md-4">
        <form asp-action="@nameof(MVC.Racks.Edit)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="RackId" />
            <input type="hidden" asp-for="RackNumber" />
            <input type="hidden" asp-for="LocationIdentifier" />
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].Selected)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].Barcode)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].ISBN)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].AuthorsNames)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].Subject)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].Publisher)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].PublicationDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].Language)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].NumberOfPages)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].Format)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].DateOfPurchase)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BookItemsOnRack[0].Price)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.BookItemsOnRack.Count(); i++)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" asp-for="@Model.BookItemsOnRack[i].Selected" />
                                <input type="hidden" asp-for="@Model.BookItemsOnRack[i].Barcode" />
                                <input type="hidden" asp-for="@Model.BookItemsOnRack[i].BookItemId" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.BookItemsOnRack[i].Barcode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.BookItemsOnRack[i].ISBN)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.BookItemsOnRack[i].Title)
                            </td>
                            <td>
                                @foreach (string author in Model.BookItemsOnRack[i].AuthorsNames)
                                {
                                    @Html.DisplayFor(modelItem => author)
                                    if (author.Equals(Model.BookItemsOnRack[i].AuthorsNames.Last()) == false)
                                    {
                                        <br>
                                    }
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.BookItemsOnRack[i].Subject)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.BookItemsOnRack[i].Publisher)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.BookItemsOnRack[i].PublicationDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.BookItemsOnRack[i].Language)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.BookItemsOnRack[i].NumberOfPages)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.BookItemsOnRack[i].Format)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.BookItemsOnRack[i].DateOfPurchase)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.BookItemsOnRack[i].Price)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="form-group">
                <input type="submit" value="@ViewResource.Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<hr />

<div>
    <a asp-action="@nameof(MVC.Racks.Index)">@ViewResource.Racks</a>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="@nameof(MVC.Racks.Edit)" method="get"
   asp-route-id="@(Model.RackId)"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-pageSize="@(Model.PageSize)"
   class="btn btn-default @prevDisabled">
    @ViewResource.Previous
</a>

<a asp-action="@nameof(MVC.Racks.Edit)" method="get"
   asp-route-id="@(Model.RackId)"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-pageSize="@(Model.PageSize)"
   class="btn btn-default @nextDisabled">
    @ViewResource.Next
</a>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
         function SelectionChanged()
         {
             window.location = '@Url.Action(nameof(MVC.Racks.Edit), nameof(MVC.Racks))'  + '?pageSize=' + $("#pageSize").val();
         }
    </script>
}
