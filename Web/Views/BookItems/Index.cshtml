@model Web.ViewModels.BookItems.BookItemsIndexViewModel

@{
    ViewData["Title"] = ViewResource.BookItems;
}

<h1>@ViewResource.Index</h1>

<p>
    <a asp-controller="@nameof(MVC.Books)" asp-action="@nameof(MVC.Books.Create)">@ViewResource.CreateNew</a>
</p>

<form asp-action="@nameof(MVC.BookItems.Index)" method="get">
    <div class="form-actions no-color">
        <p>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ISBNFilter" class="control-label"></label>
                <input asp-for="ISBNFilter" class="form-control" />
                <span asp-validation-for="ISBNFilter" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BarcodeFilter" class="control-label"></label>
                <input asp-for="BarcodeFilter" class="form-control" />
                <span asp-validation-for="BarcodeFilter" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="hidden" asp-for="PageSize" />
                <a asp-route-PageSize="@(Model.PageSize)"></a>
            </div>
            <input type="submit" value="@ViewResource.Filter" class="btn btn-secondary" />
        </p>
    </div>
</form>

<p>
    @ViewResource.PageSize
    @Html.DropDownList(
        "pageSize", Model.PageSizes as List<SelectListItem>,
        new
        {
            onchange = "SelectionChanged()",
            pageSize = "pageSize"
        })
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Index[0].Barcode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Index[0].ISBN)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Index[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Index[0].AuthorsNames)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Index[0].Subject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Index[0].Publisher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Index[0].Language)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Index[0].NumberOfPages)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Index[0].PublicationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Index[0].Format)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Index[0].Status)
            </th>
            <th>
                @Html.DisplayName(ViewResource.Location)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Index)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Barcode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ISBN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @foreach (var author in item.AuthorsNames)
                    {
                        @Html.DisplayFor(modelItem => author)
                        if (author.Equals(item.AuthorsNames.Last()) == false)
                        {
                            <br>
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Subject)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Publisher)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Language)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfPages)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublicationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Format)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LocationIdentifier)
                    @Html.DisplayFor(modelItem => item.RackNumber)
                </td>
                <td>
                    <a asp-controller="@nameof(MVC.BookItems)" asp-action="@nameof(MVC.BookItems.Edit)" asp-route-id="@item.BookItemId">@ViewResource.Edit</a> |
                    <a asp-controller="@nameof(MVC.BookItems)" asp-action="@nameof(MVC.BookItems.Details)" asp-route-id="@item.BookItemId">@ViewResource.Details</a>
                    @if (item.Status != BookStatus.Loaned)
                    {
                        @:|
                        <a asp-controller="@nameof(MVC.BookItems)" asp-action="@nameof(MVC.BookItems.Delete)" asp-route-id="@item.BookItemId">@ViewResource.Delete</a>
                    }
                    @if (item.IsReserved)
                    {
                        @:|
                        <a asp-controller="@nameof(MVC.BookItems)" asp-action="@nameof(MVC.BookItems.CancelReservation)" asp-route-id="@item.BookItemId">@ViewResource.CancelReservation</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="@nameof(MVC.BookItems.Index)" method="get"
   asp-route-ISBNFilter="@(Model.ISBNFilter)"
   asp-route-BarcodeFilter="@(Model.BarcodeFilter)"
   asp-route-PageNumber="@(Model.PageIndex - 1)"
   asp-route-PageSize="@(Model.PageSize)"
   class="btn btn-default @prevDisabled">
    @ViewResource.Previous
</a>

<a asp-action="@nameof(MVC.BookItems.Index)" method="get"
   asp-route-ISBNFilter="@(Model.ISBNFilter)"
   asp-route-BarcodeFilter="@(Model.BarcodeFilter)"
   asp-route-PageNumber="@(Model.PageIndex + 1)"
   asp-route-PageSize="@(Model.PageSize)"
   class="btn btn-default @nextDisabled">
    @ViewResource.Next
</a>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    @if (Model.ISBNFilter == null && Model.BarcodeFilter == null)
    {
        <script>
             function SelectionChanged()
             {
                 window.location = '@Url.Action(nameof(MVC.BookItems.Index), nameof(MVC.BookItems))' +
                         '?PageSize=' + $("#pageSize").val();
             }
        </script>
    }
    else
    {
        <script>
             function SelectionChanged()
             {
                     window.location = '@Url.Action(nameof(MVC.BookItems.Index), nameof(MVC.BookItems),
                new { Model.ISBNFilter, Model.BarcodeFilter })' +
                     '&PageSize=' + $("#pageSize").val();
             }
        </script>
    }
}