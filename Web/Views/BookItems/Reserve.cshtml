@model Web.ViewModels.BookItems.BookItemReserveViewModel
@{
    ViewData["Title"] = ViewResource.ReserveBookItem;
}

<h1>@ViewResource.Reserve</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="@nameof(MVC.BookItems.Reserve)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input type="hidden" asp-for="BookItemId" class="form-control" />
                <span asp-validation-for="BookItemId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="hidden" asp-for="BookId" class="form-control" />
                <span asp-validation-for="BookId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="hidden" asp-for="MemberId" class="form-control" />
                <span asp-validation-for="MemberId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="@ViewResource.Reserve" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<hr />

<div>
    <a asp-controller="@nameof(MVC.Books)" asp-action="@nameof(MVC.Books.Index)">@ViewResource.Books</a>

    @if (Model.HasOtherBookItems == true)
    {
        @:|
        <a asp-controller="@nameof(MVC.BookItems)" asp-action="@nameof(MVC.BookItems.IndexByBook)" asp-route-id="@Model.BookId">@ViewResource.OtherBookItems</a>
    }
</div>