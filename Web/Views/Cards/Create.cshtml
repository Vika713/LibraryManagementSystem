@model Web.ViewModels.Cards.CardCreateViewModel

@{
    ViewData["Title"] = @ViewResource.CreateCard;
}

<h1>@ViewResource.Create</h1>

<h4>@ViewResource.Card</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="@nameof(MVC.Cards.Create)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="PersonId" />
            <input type="hidden" asp-for="MemberId" />
            <div class="form-group">
                <label asp-for="MemberCode" class="control-label"></label>
                <input asp-for="MemberCode" class="form-control" readonly="@(true)" />
            </div>
            <div class="form-group">
                <label asp-for="Number" class="control-label"></label>
                <input asp-for="Number" class="form-control" />
                <span asp-validation-for="Number" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Barcode" class="control-label"></label>
                <input asp-for="Barcode" class="form-control" />
                <span asp-validation-for="Barcode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="@ViewResource.Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<hr />

<div>
    <a asp-controller="@nameof(MVC.People)" asp-action="@nameof(MVC.People.Index)">@ViewResource.People</a>
    |

    @if ((await AuthorizationService.AuthorizeAsync(User, Model.PersonId, OperationAuthorizationRequirements.PersonDetails)).Succeeded)
    {
        <a asp-controller="@nameof(MVC.People)" asp-action="@nameof(MVC.People.Details)" asp-route-id="@Model.PersonId">@ViewResource.PersonDetails</a>
        @:|
    }
    <a asp-controller="@nameof(MVC.Members)" asp-action="@nameof(MVC.Members.Details)" asp-route-id="@Model.MemberId">@ViewResource.MemberDetails</a>
</div>
